services:
  x-base-web: &base-web
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile
    env_file:
      - ./.env/.dev-sample
    volumes:
      - ./services/backend:/app
    depends_on:
      - redis
      - db
    networks:
      - my-network
    command: ["/start.sh"]

  # Fast API
  web:
    <<: *base-web
    ports:
      - "8010:8000"
  # celery worker
  celery_worker:
    <<: *base-web
    image: fastapi_celery_worker
    command: /start-celeryworker.sh

  # Celery beat
  celery_beat:
    <<: *base-web
    image: fastapi_celery_beat
    command: /start-celerybeat.sh

  test-web:
    <<: *base-web
    entrypoint: ["/bin/bash", "-c"]
    command: ["echo 'Ready to run tests and linting'"]
    environment:
      - TEST_DATABASE_URL=postgresql://test_user:test_password@test-db/test_fastapi_celery
      - FASTAPI_CONFIG=testing
    depends_on:
      - redis
      - test-db

  # Postgres
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=fastapi_celery
      - POSTGRES_USER=fastapi_celery
      - POSTGRES_PASSWORD=fastapi_celery
    networks:
      - my-network

  test-db:
    image: postgres:16-alpine
    volumes:
      - test_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=test_fastapi_celery
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
    ports:
      - "5433:5432"
    networks:
      - my-network

  # Redis
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  test_postgres_data:
  redis_data:
